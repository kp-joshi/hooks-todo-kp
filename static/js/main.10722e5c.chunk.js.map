{"version":3,"sources":["hooks/useToggleState.js","hooks/useInputState.js","EditTodoForm.js","Todo.js","TodoList.js","TodoForm.js","TodoApp.js","App.js","reportWebVitals.js","index.js"],"names":["useToggle","initialVal","useState","state","setState","toggle","value","setValue","e","target","EditTodoForm","id","task","editTodo","toggleEditForm","useInputState","handleChange","reset","onSubmit","preventDefault","TextField","margin","onChange","fullWidth","Todo","completed","removeTodo","toggleTodo","useToggleState","isEditing","ListItem","Checkbox","tabIndex","checked","onClick","ListItemText","style","textDecoration","ListItemSecondaryAction","IconButton","aria-label","TodoList","todos","Paper","List","map","todo","TodoForm","addTodo","padding","label","TodoApp","initialTodos","JSON","parse","window","localStorage","getItem","setTodos","useEffect","setItem","stringify","height","backgroundColor","elevation","AppBar","color","position","Typography","Grid","container","justify","marginTop","item","xs","md","lg","newTodoText","uuidv4","todoId","updatedTodos","filter","newTask","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10722e5c.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction useToggle(initialVal = false){\r\n\r\n    const [state,setState] = useState(initialVal);\r\n\r\n    const toggle = () => {\r\n        setState(!state);\r\n    };\r\n\r\n    return [state,toggle];\r\n}\r\n\r\nexport default useToggle;","import { useState } from \"react\";\r\nexport default initialVal => {\r\n    const [value,setValue] = useState(initialVal);\r\n    const handleChange = e =>{\r\n        setValue(e.target.value);\r\n    };\r\n\r\n    const reset = () =>{\r\n        setValue(\"\");\r\n    };\r\n\r\n    return [value,handleChange,reset];\r\n};\r\n","import React from 'react';\r\nimport useInputState from './hooks/useInputState';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n function EditTodoForm({id,task,editTodo,toggleEditForm}) {\r\n\r\n    const [value,handleChange,reset] = useInputState(task);\r\n    return (\r\n            <form onSubmit={(e)=>{\r\n                e.preventDefault();\r\n                editTodo(id,value);\r\n                reset();\r\n                toggleEditForm();\r\n            }}>\r\n            <TextField \r\n                margin=\"normal\" \r\n                value={value} \r\n                onChange={handleChange} \r\n                fullWidth   \r\n            />\r\n            </form>\r\n    );\r\n    \r\n\r\n}\r\n\r\nexport default EditTodoForm;","import React from 'react';\r\nimport useToggleState from './hooks/useToggleState';\r\nimport EditTodoForm from './EditTodoForm';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n\r\n\r\n function Todo({id,task,completed,removeTodo,toggleTodo,editTodo}) {\r\n     const [isEditing,toggle] = useToggleState(false);\r\n    return (\r\n        <ListItem>\r\n            {isEditing ?( <EditTodoForm editTodo={editTodo} id={id} task={task} toggleEditForm={toggle} /> ) : \r\n                    (\r\n            <>\r\n           <Checkbox tabIndex={-1} checked={completed} onClick={()=>toggleTodo(id)}/>\r\n        <ListItemText style={{textDecoration:completed ? \"line-through\" : \"none\"}}>\r\n            {task}\r\n        </ListItemText>\r\n        <ListItemSecondaryAction>\r\n           <IconButton aria-label=\"Delete\" onClick={()=>removeTodo(id)}>\r\n               <DeleteIcon />\r\n           </IconButton>\r\n\r\n           <IconButton aria-label=\"Edit\" onClick={toggle}>\r\n               <EditIcon />\r\n           </IconButton>\r\n\r\n        </ListItemSecondaryAction>\r\n        </>\r\n                    )}\r\n     </ListItem>\r\n    );\r\n     \r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport Todo from './Todo';\r\n\r\n\r\n\r\nfunction TodoList({todos,removeTodo,toggleTodo,editTodo}){\r\n    return (\r\n        <Paper>\r\n           <List>\r\n            {todos.map(todo=>(\r\n                \r\n                <Todo \r\n                    id={todo.id}\r\n                    task={todo.task} \r\n                    key={todo.id} \r\n                    completed={todo.completed} \r\n                    toggleTodo={toggleTodo}\r\n                    removeTodo={removeTodo}\r\n                    editTodo={editTodo}\r\n                />\r\n                \r\n               \r\n            ))}\r\n            </List>\r\n        </Paper>\r\n    );\r\n}\r\nexport default TodoList;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport useInputState from './hooks/useInputState';\r\n\r\nfunction TodoForm({addTodo}){\r\n    const [value,handleChange,reset] = useInputState(\"\");\r\n    return(\r\n        <Paper style={{margin:\"1rem 0\",padding:\"0 1rem\", padding:\"0 1rem\"}}>\r\n            <form onSubmit={e=>{\r\n                e.preventDefault();\r\n                addTodo(value);\r\n                reset();    \r\n            }}>\r\n            <TextField \r\n                value={value} \r\n                onChange={handleChange} \r\n                margin=\"normal\" \r\n                label=\"Add New Todo\"\r\n                fullWidth\r\n            />\r\n            </form>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default TodoForm;","import React,{ useState,useEffect } from 'react';\r\nimport TodoList from './TodoList';\r\nimport TodoForm from './TodoForm';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport AppBar from '@material-ui/core/Appbar';\r\nimport ToolBar from '@material-ui/core/Toolbar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction TodoApp(){\r\n\r\n    const initialTodos = JSON.parse(window.localStorage.getItem(\"todos\") || \"[]\");\r\n    //const initialTodos = [\r\n//        {id:1,task:\"Clean Fishtank\",completed:false},\r\n  //      {id:2,task:\"wash car\",completed:true},\r\n    //    {id:3,task:\"Walk the dog\",completed:false}\r\n    //];\r\n \r\n    const[todos,setTodos]=useState(initialTodos);\r\n\r\n\r\n    useEffect(()=>{\r\n        window.localStorage.setItem(\"todos\",JSON.stringify(todos) );\r\n    },[todos]);\r\n\r\n    const addTodo = newTodoText =>{\r\n        setTodos([...todos,{id:uuidv4(),task:newTodoText,completed:false}]);\r\n    };\r\n\r\n    const removeTodo = todoId =>{\r\n        const updatedTodos = todos.filter(todo => todo.id !== todoId);\r\n        setTodos(updatedTodos);\r\n    };\r\n\r\n    const toggleTodo = todoId =>{\r\n        const updatedTodos = todos.map(todo =>\r\n            todo.id === todoId ? {...todo,completed:!todo.completed} : todo\r\n        );\r\n        setTodos(updatedTodos);\r\n    };\r\n\r\n    const editTodo = (todoId,newTask) =>{\r\n        const updatedTodos = todos.map(todo =>\r\n            todo.id === todoId ? {...todo,task:newTask} : todo\r\n        );\r\n        setTodos(updatedTodos);\r\n    }\r\n    return (\r\n        <Paper\r\n            style={{\r\n                padding:0,\r\n                margin:0,\r\n                height:'100vh',\r\n                backgroundColor:'#fafafa'\r\n            }}\r\n            elevation={0}\r\n        >\r\n            <AppBar color='primary' position='static' style={{height:'64px'}}>\r\n              <ToolBar>\r\n                <Typography color='inherit'>TODOS WITH HOOKS</Typography>\r\n              </ToolBar>   \r\n            </AppBar>\r\n            <Grid container justify=\"center\" style={{marginTop:\"1rem\"}}>\r\n            <Grid item xs={11} md={8} lg={4}>\r\n            <TodoForm addTodo={addTodo}/>\r\n            <TodoList \r\n                todos={todos} \r\n                removeTodo={removeTodo} \r\n                toggleTodo={toggleTodo}\r\n                editTodo={editTodo}\r\n                />\r\n            </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default TodoApp;","import React, {Component} from 'react'; \nimport TodoApp from './TodoApp';\n\n\nfunction App(){\n  return(\n    <TodoApp/>\n  )\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}